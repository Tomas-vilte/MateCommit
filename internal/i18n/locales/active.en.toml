[app_usage]
other = "🧉 Intelligent assistant for generating commit messages"

[app_description]
other = """
MateCommit helps you generate meaningful commit messages using AI.
Examples:
   mate-commit suggest                   # Generates 3 suggestions in the default language
   mate-commit s -n 5 -l es              # Generates 5 suggestions in Spanish
   mate-commit config show               # Shows the current configuration
"""

[suggest_command_usage]
other = "💡 Generate commit message suggestions"

[suggest_command_description]
other = "Analyze your changes and suggest appropriate commit messages"

[suggest_count_flag_usage]
other = "Number of suggestions (1-10)"

[suggest_lang_flag_usage]
other = "Language (en, es)"

[suggest_no_emoji_flag_usage]
other = "Disable emojis"

[no_staged_changes]
other = "❌ No staged changes to commit.\nUse 'git add' to stage your changes first"

[invalid_suggestions_count]
other = "Number of suggestions must be between {{.Min}} and {{.Max}}"

[gemini_init_error]
other = "❌ Error initializing Gemini: {{.Error}}"

[analyzing_changes]
other = "🔍 Analyzing changes..."

[suggestion_generation_error]
other = "❌ Error generating suggestions: {{.Error}}"

[config_command_usage]
other = "⚙️  Manage configuration"

[config_set_lang_usage]
other = "🌍 Set default language"

[config_set_lang_flag_usage]
other = "Language (en, es)"

[unsupported_language]
other = "❌ Unsupported language. Use 'en' or 'es'"

[language_configured]
other = "✅ Language set to: {{.Lang}}"

[error_missing_api_key]
other = "The GEMINI_API_KEY is not configured"

[error_generating_content]
other = "Error generating content: {{.Error}}"

[error_invalid_suggestion_count]
other = "Invalid number of suggestions requested"

[error_no_files]
other = "No files provided for analysis"

[error_no_suggestions]
other = "Could not generate any commit suggestions"

[files_prefix]
other = "Files: "

[config_show_usage]
other = "📋 Show current configuration"

[current_config]
other = "📋 Current configuration"

[language_label]
other = "🌍 Language: {{.Lang}}"

[emojis_label]
other = "😊 Emojis: {{.Emoji}}"

[max_length_label]
other = "📏 Maximum length: {{.MaxLength}}"

[suggestions_header]
other = "Commit Suggestions"

[invalid_selection]
other = "Invalid selection: must be between 1 and {{.Max}}"

[api]
invalid_key = "❌ Invalid API Key. Please check the format."
key_configured = "✅ API Key successfully configured."
key_configuration_help = "💡 Now you can use 'mate-commit suggest' to generate suggestions."
key_not_set = "🔑 API Key: ❌ Not configured"
key_tip = "\n💡 Tip: Set your API key with:"
key_config_command = "mate-commit config set-api-key --key <your_api_key>"
key_set = "🔑 API Key: ✅ Configured"

[commands]
set_api_key_usage = "🔑 Set the Gemini API Key"

[flags]
gemini_api_key = "Your Gemini API Key"
[commit]
prompt_selection = "👉 Enter your selection: "
operation_canceled = "✨ Operation canceled"
invalid_selection = "❌ Invalid selection: it must be between 1 and {{.Number}}"
add_file_to_staging = "Adding file {{.File}} to stagging...\n"
error_add_file_staging = "Error adding file {{.File}} to staging, due to: {{.Error}}"
commit_successful = "✅ Commit successfully created with the message: {{.CommitTitle}}"
error_reading_selection = "❌ Error reading selection: {{.Error}}"
header_message = "📝 Suggestions:"
file_list_header = "📄 Modified files:"
explanation_prefix = "💡"
select_option_prompt = "\nSelect an option:"
option_commit = "1-N: Use the corresponding suggestion"
option_exit = "0: Exit without committing"
error_creating_commit = "❌ Error creating the commit: {0}"
factory_already_registered = "❌ The factory with the name '{{.FactoryName}}' is already registered"


[jira_config_command_usage]
jira_config_usage = "Set up Jira credentials"
jira_config_base_url_usage = "Jira Base URL"
jira_config_api_key_usage = "Jira API Key"
jira_config_email_usage = "Email associated with Jira"
jira_config_missing_fields = "All fields are required: base-url, api-key, email"
jira_config_save_error = "Error saving Jira settings: {{.Error}}"
jira_config_success = "Jira configuration saved successfully"
ticket_command_usage = "Manage ticket integration settings"
disable_ticket_command_usage = "Disable ticket integration"
enable_ticket_command_usage = "Enable ticket integration"
ticket_disabled_success = "Ticket integration has been disabled successfully"
ticket_enabled_success = "Ticket integration has been enabled successfully"

[config_save]
error_saving_config = "Error saving configuration: {{.Error}}"

[gemini_service]
modified_files_prefix = "📄 Modified files:"
explanation_prefix = "Explanation:"
requirements_analysis_prefix = "🎯 Requirements Analysis:"
criteria_status_prefix = "⚠️ Criteria Status:"
missing_criteria_prefix = "❌ Missing Criteria:"
improvement_suggestions_prefix = "💡 Improvement Suggestions:"
improvement_suggestions_none = "-"
criteria_fully_met_prefix = "Fully Met"
criteria_partially_met_prefix = "Partially Met"
criteria_not_met_prefix = "Not Met"
criteria_unknown_prefix = "Unknown Status"
code_analysis_prefix = "📊 Code Analysis:"
changes_overview_prefix = "- Changes Overview:"
primary_purpose_prefix = "- Primary Purpose:"
technical_impact_prefix = "- Technical Impact:"
suggestion_prefix = "=========\\[ Suggestion\\s*\\d*\\s*\\]========="
technical_analysis_section = "💭 Technical Analysis:"
improvement_suggestions_label = "Suggested Improvements:"
criteria_status_full = "⚠️  Criteria Status: {{.Status}}"
missing_criteria_none = "✅ Missing Criteria: None"
pr_title_section = "PR Title"
pr_labels_section = "Suggested Tags"
pr_changes_section = "Key Changes"
error_gemini_client = "Error creating Gemini client: {{.Error}}"
response_empty = "Empty AI response"
title_not_found = "The title was not found in the answer"

[suggestion_header]
other = "=========[ Suggestion {{.Number}} ]========="

[config_models]
config_set_ai_active_usage = "Set the active AI for commit generation"
config_set_ai_model_usage = "Set the model for a specific AI"
error_missing_ai = "You must specify an AI"
error_invalid_ai = "Invalid AI: {{.AI}}"
error_missing_ai_or_model = "You must specify an AI and a model"
config_set_ai_active_success = "Active AI set to: {{.AI}}"
config_set_ai_model_success = "Model for {{.AI}} set to: {{.Model}}"
config_available_ais = "Available AIs:"
error_missing_model = "You must specify a model"
error_invalid_model = "Invalid Model {{.Model}}"
config_current_model_for_ai = "Current model for {{.AI}}: {{.Model}}"
config_no_model_selected_for_ai = "No model selected for {{.AI}}"
ticket_service_enabled = "Ticket service enabled: {{.Service}}"
ticket_service_disabled = "Ticket service disabled"
jira_config_label = "Jira Settings - BaseURL: {{.BaseURL}}, Email: {{.Email}}"
active_ai_label = "Active AI: {{.IA}}"
ai_models_label = "Configured AI models:"
no_ai_models_configured = "No AI models configured"
error_invalid_language = "Invalid Language: {{.Language}}"

[error]
get_labels = "Error getting labels"
create_label = "Error creating label '{{.label}}'"
update_pr = "Error updating PR #{{.pr_number}}"
get_pr = "Error getting PR #{{.pr_number}}"
get_commits = "Error getting commits for PR #{{.pr_number}}"
get_diff = "Error getting diff for PR #{{.pr_number}}"
get_repo_labels = "Error getting repository labels"
add_labels = "Error adding labels to PR #{{.pr_number}}"
invalid_repo_format = "Invalid repository format"
pr_summary_error = "Error generating PR summary"
no_repo_configured = "No repository configured. Use --repo or configure an active VCS provider"
vcs_provider_not_configured = "VCS provider '{{.Provider}}' is not configured"

[label]
feature = "New features"
fix = "Bug fixes"
docs = "Documentation changes"
refactor = "Code refactoring"
test = "Testing and coverage"
infra = "Infrastructure and DevOps"
hotfix = "Critical fixes"
default = "Label: {{.label}}"


[vcs_summary]
pr_summary_usage = "Generate an automatic summary for a Pull Request"
repo_flag_usage = "Specifies the repository in owner/repo format"
pr_number_usage = "Pull Request number to summarize"
pr_summary_success = "✅ PR #{{.PRNumber}} updated: {{.Title}}"
config_set_vcs_usage = "Configure a version control system (VCS) provider"
config_set_vcs_provider_usage = "Name of the VCS provider (github, gitlab, etc.)"
config_set_vcs_token_usage = "Authentication token for the VCS provider"
config_set_vcs_owner_usage = "Owner or user of the repository"
config_set_vcs_repo_usage = "Name of the repository"
config_vcs_updated = "VCS provider '{{.Provider}}' configuration updated successfully"
config_set_active_vcs_usage = "Set the active VCS provider"
config_set_active_vcs_provider_usage = "Name of the VCS provider to set as active"
config_active_vcs_updated = "Active VCS provider set to '{{.Provider}}'"

[commit_service]
undetected_changes = "No changes detected"
error_getting_diff = "Error getting changes: {{.Error}}"
no_differences_detected = "No differences were detected in the files"
error_get_id_ticket = "Error getting ticket ID: {{.Error}}"
error_get_ticket_info = "Error obtaining ticket information: {{.Error}}"
ticket_id_not_found_branch = "No ticket ID found in the branch name"
error_get_name_from_branch = "Error getting branch name: {{.Error}}"

[pr_service]
error_get_pr = "Error getting the PR: {{.Error}}"
error_create_summary_pr = "Error creating PR summary: {{.Error}}"
error_update_pr = "Error updating PR: {{.Error}}"