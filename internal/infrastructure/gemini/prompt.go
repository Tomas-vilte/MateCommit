package gemini

const (
	promptTemplateEN = `Generate %d commit message suggestions. Respond with the following structure for EACH suggestion:
	=========[ Suggestion ]=========
	[number]. [Ordinal] suggestion:
	Commit: [type]: [message]
	Files: [list of modified files, separated by comma]
	Explanation: [commit explanation]
	Criteria Status: [Indicate if the acceptance criteria are fully met, partially met, or not met.]
	Missing Criteria: [List the specific criteria that are missing, if any.]
	Improvement Suggestions: [Provide suggestions for improvement, if any.]
	
	Example (with emojis):
	=========[ Suggestion ]=========
	1. First suggestion:
	Commit: ‚ú® feat: add config option for commit suggestion generation
	Files: main.go, config.go
	Explanation: Added a new configuration option to enable commit suggestion generation.
	Criteria Status: fully_met
	Missing Criteria: None
	Improvement Suggestions: None
	
	=========[ Suggestion ]=========
	2. Second suggestion:
	Commit: üêõ fix: resolve login issues
	Files: auth.go, login.go
	Explanation: Fixed an issue where users were unable to log in due to a validation error.
	Criteria Status: partially_met
	Missing Criteria: Ensure login works with 2FA.
	Improvement Suggestions: Implement two-factor authentication (2FA) in the login module.
	
	=========[ Suggestion ]=========
	3. Third suggestion:
	Commit: üìö docs: update documentation for API endpoints
	Files: api.md
	Explanation: Updated the documentation for all available API endpoints.
	Criteria Status: not_met
	Missing Criteria: Ensure all endpoints are documented.
	Improvement Suggestions: Add documentation for the missing endpoints.
	
	Now, generate %d similar suggestions based on the following information.
	
	Modified files:
	%s
	Diff:
	%s
	%s  <!-- Aqu√≠ se agregar√° la informaci√≥n del ticket si est√° disponible -->
	
	Additional Instructions:
	1. Each commit message must follow the exact template above.
	2. Commit messages should be clear and concise.
	3. Limit each commit message to 100 characters.
	4. Ensure that the commit type matches the change (e.g., feat, fix, refactor, chore).
	5. Use a variety of commit types (feat, fix, docs, chore, refactor, etc).
	6. The ordinal must be correct (e.g., "First", "Second", "Third", etc.)
	7. If acceptance criteria are provided, verify if the code meets them. Indicate if the criteria are fully met, partially met, or not met.
	8. If criteria are not fully met, list the specific criteria that are missing and provide suggestions for improvement.
	9. Follow the exact structure for Criteria Status, Missing Criteria, and Improvement Suggestions. Do not mix them with the Explanation.
	10. Use the following format for Criteria Status, Missing Criteria, and Improvement Suggestions:
	    - Criteria Status: [fully_met, partially_met, or not_met]
	    - Missing Criteria: [list of missing criteria, separated by commas]
	    - Improvement Suggestions: [list of suggestions, separated by commas]
	`

	promptTemplateES = `Gener√° %d sugerencias de mensajes de commit. Respond√© con la siguiente estructura para CADA sugerencia:
	=========[ Sugerencia ]=========
	[n√∫mero]. [Ordinal] sugerencia:
	Commit: [tipo]: [mensaje]
	Archivos: [lista de archivos modificados, separados por coma]
	Explicaci√≥n: [explicaci√≥n del commit]
	Estado de los Criterios: [Indic√° si los criterios de aceptaci√≥n se cumplen completamente, parcialmente o no se cumplen.]
	Criterios Faltantes: [List√° los criterios espec√≠ficos que faltan, si los hay.]
	Sugerencias de Mejora: [Proporcion√° sugerencias de mejora, si las hay.]
	
	Ejemplo (con emojis):
	=========[ Sugerencia ]=========
	1. Primera sugerencia:
	Commit: ‚ú® feat: Agregar opci√≥n de configuraci√≥n para generaci√≥n de sugerencias de commit
	Archivos: main.go, config.go
	Explicaci√≥n: Se agreg√≥ una nueva opci√≥n de configuraci√≥n para habilitar la generaci√≥n de sugerencias de commit.
	Estado de los Criterios: completamente_cumplidos
	Criterios Faltantes: Ninguno
	Sugerencias de Mejora: Ninguna
	
	=========[ Sugerencia ]=========
	2. Segunda sugerencia:
	Commit: üêõ fix: Corregir problemas de inicio de sesi√≥n
	Archivos: auth.go, login.go
	Explicaci√≥n: Se corrigi√≥ un problema por el cual los usuarios no pod√≠an iniciar sesi√≥n debido a un error de validaci√≥n.
	Estado de los Criterios: parcialmente_cumplidos
	Criterios Faltantes: Asegurar que el inicio de sesi√≥n funcione con 2FA.
	Sugerencias de Mejora: Implementar autenticaci√≥n de dos factores (2FA) en el m√≥dulo de inicio de sesi√≥n.
	
	=========[ Sugerencia ]=========
	3. Tercera sugerencia:
	Commit: üìö docs: Actualizar documentaci√≥n para endpoints de la API
	Archivos: api.md
	Explicaci√≥n: Se actualiz√≥ la documentaci√≥n para todos los endpoints de la API disponibles.
	Estado de los Criterios: no_cumplidos
	Criterios Faltantes: Asegurar que todos los endpoints est√©n documentados.
	Sugerencias de Mejora: Agregar documentaci√≥n para los endpoints faltantes.
	
	Ahora, gener√° %d sugerencias similares bas√°ndote en la siguiente informaci√≥n.
	
	Archivos modificados:
	%s
	Diff:
	%s
	%s  <!-- Aqu√≠ se agregar√° la informaci√≥n del ticket si est√° disponible -->
	
	Instrucciones adicionales:
	1. Cada mensaje de commit tiene que seguir la estructura exacta de arriba.
	2. Los mensajes de commit tienen que ser claros y concisos.
	3. Limit√° cada mensaje de commit a 100 caracteres.
	4. Asegurate de que el tipo de commit coincida con el cambio (e.g., feat, fix, refactor, chore).
	5. Us√° una variedad de tipos de commit (feat, fix, docs, chore, refactor, etc).
	6. El ordinal tiene que ser correcto (e.g., "Primera", "Segunda", "Tercera", etc.)
	7. Si se proporcionan criterios de aceptaci√≥n, verific√° si el c√≥digo los cumple. Indic√° si los criterios se cumplen completamente, parcialmente o no se cumplen.
	8. Si los criterios no se cumplen completamente, list√° los criterios espec√≠ficos que faltan y proporcion√° sugerencias de mejora.
	9. Segu√≠ la estructura exacta para Estado de los Criterios, Criterios Faltantes y Sugerencias de Mejora. No los mezcles con la Explicaci√≥n.
	10. Us√° el siguiente formato para Estado de los Criterios, Criterios Faltantes y Sugerencias de Mejora:
	    - Estado de los Criterios: [completamente_cumplidos, parcialmente_cumplidos, o no_cumplidos]
	    - Criterios Faltantes: [lista de criterios faltantes, separados por comas]
	    - Sugerencias de Mejora: [lista de sugerencias, separadas por comas]
	`
)
